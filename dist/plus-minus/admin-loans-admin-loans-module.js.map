{"version":3,"sources":["webpack:///./src/app/admin-panel/admin-loans/add-or-edit-loan/add-or-edit-loan.component.html","webpack:///./src/app/admin-panel/admin-loans/admin-loans.component.html","webpack:///./src/app/admin-panel/admin-loans/add-or-edit-loan/add-or-edit-loan.component.scss","webpack:///./src/app/admin-panel/admin-loans/add-or-edit-loan/add-or-edit-loan.component.ts","webpack:///./src/app/admin-panel/admin-loans/admin-loan.service.ts","webpack:///./src/app/admin-panel/admin-loans/admin-loans.component.scss","webpack:///./src/app/admin-panel/admin-loans/admin-loans.component.ts","webpack:///./src/app/admin-panel/admin-loans/admin-loans.module.ts","webpack:///./src/app/admin-panel/admin-loans/admin-loans.routing.ts","webpack:///./src/app/home/loans/models/loanGroup.model.ts"],"names":[],"mappings":"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","file":"admin-loans-admin-loans-module.js","sourcesContent":["module.exports = \"<form #f=\\\"ngForm\\\"  class=\\\"nt-form\\\" *ngIf=\\\"product\\\" >\\r\\n\\r\\n  <div class=\\\"container-fluid table-edit\\\">\\r\\n\\r\\n      <div class=\\\"row table-edit__actions\\\">\\r\\n          <div class=\\\"col-12 table-edit__actions__wrapper\\\">\\r\\n\\r\\n              <button mat-raised-button (click)=\\\"dialogRef.close()\\\">{{'~cancel' | translate}}</button>\\r\\n\\r\\n              <button mat-raised-button color=\\\"accent\\\"  type=\\\"submit\\\"\\r\\n              *ngIf=\\\"product?.lnId\\\"\\r\\n              (click)=\\\"onUpdate()\\\"\\r\\n              [ngClass]=\\\"{'is-loading': loading}\\\"\\r\\n              [disabled]=\\\"loading\\\"\\r\\n              >{{'~update' | translate}}</button>\\r\\n\\r\\n              <button mat-raised-button color=\\\"accent\\\"  type=\\\"submit\\\"\\r\\n              *ngIf=\\\"!product?.lnId\\\"\\r\\n              (click)=\\\"onAdd()\\\"\\r\\n              [ngClass]=\\\"{'is-loading': loading}\\\"\\r\\n              [disabled]=\\\"loading\\\"\\r\\n              >{{'~add' | translate}}</button>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row table-edit__inputs\\\">\\r\\n        <div class=\\\"col-12 col-md-6 p-0\\\">\\r\\n\\r\\n            <select-search name=\\\"bankId\\\" [(ngModel)]=\\\"product.bankId\\\"\\r\\n               class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\" [banks]=\\\"banks$ | async\\\"\\r\\n               placeholder=\\\"{{'~bankId' | translate}}\\\" [appearance]=\\\"'legacy'\\\">\\r\\n           </select-search>\\r\\n\\r\\n           <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n            <mat-label>{{'~bankName' | translate}}</mat-label>\\r\\n            <input matInput disabled placeholder=\\\"{{'~bankName' | translate}}\\\" required  name=\\\"bankName\\\"  [(ngModel)]=\\\"product.bankName\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n\\r\\n           <fieldset ngModelGroup=\\\"loanName\\\">\\r\\n\\r\\n              <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                <mat-label>{{'~loanName' | translate}} (AZ)</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'~loanName' | translate}} (AZ)\\\" required  name=\\\"az\\\"  [(ngModel)]=\\\"product.loanName.az\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                  <mat-label>{{'~loanName' | translate}} (EN)</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'~loanName' | translate}} (EN)\\\"   name=\\\"en\\\"  [(ngModel)]=\\\"product.loanName.en\\\">\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                  <mat-label>{{'~loanName' | translate}} (RU)</mat-label>\\r\\n                <input matInput placeholder=\\\"{{'~loanName' | translate}} (RU)\\\"   name=\\\"ru\\\"  [(ngModel)]=\\\"product.loanName.ru\\\">\\r\\n              </mat-form-field>i\\r\\n\\r\\n          </fieldset>\\r\\n\\r\\n\\r\\n          <fieldset ngModelGroup=\\\"description\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~description' | translate}} (AZ)</mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"az\\\"\\r\\n                            [(ngModel)]=\\\"product.description.az\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            required\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~description' | translate}} (EN) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"en\\\"\\r\\n                            [(ngModel)]=\\\"product.description.en\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~description' | translate}} (RU) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"ru\\\"\\r\\n                            [(ngModel)]=\\\"product.description.ru\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n          </fieldset>\\r\\n\\r\\n          <fieldset ngModelGroup=\\\"descriptionPD\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionPD' | translate}} (AZ)</mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"az\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionPD.az\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionPD' | translate}} (EN) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"en\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionPD.en\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionPD' | translate}} (RU) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"ru\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionPD.ru\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n\\r\\n          </fieldset>\\r\\n\\r\\n          <fieldset ngModelGroup=\\\"descriptionDOC\\\">\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionDOC' | translate}} (AZ)</mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"az\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionDOC.az\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionDOC' | translate}} (EN) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"en\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionDOC.en\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n              <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label >{{'~descriptionDOC' | translate}} (RU) </mat-label>\\r\\n                  <textarea matInput\\r\\n                            ngModel name=\\\"ru\\\"\\r\\n                            [(ngModel)]=\\\"product.descriptionDOC.ru\\\"\\r\\n                            cdkTextareaAutosize\\r\\n                            #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                            cdkAutosizeMinRows=\\\"5\\\"\\r\\n                            cdkAutosizeMaxRows=\\\"5\\\"\\r\\n                            >\\r\\n                          </textarea>\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n          </fieldset>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"col-12 col-md-6 p-0\\\">\\r\\n\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\">\\r\\n                  <mat-label>{{'~loanType'}}</mat-label>\\r\\n                  <mat-select  required  name=\\\"loanType\\\"  [(ngModel)]=\\\"product.loanType\\\">\\r\\n                    <mat-option value=\\\"IPOTEKA\\\"> IPOTEKA </mat-option>\\r\\n                    <mat-option value=\\\"CONSUMER\\\">CONSUMER</mat-option>\\r\\n                    <mat-option value=\\\"BUSINESS\\\">BUSINESS</mat-option>\\r\\n                    <mat-option value=\\\"AUTO\\\">AUTO</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <select-search name=\\\"currencyCode\\\" [(ngModel)]=\\\"product.currencyCode\\\"\\r\\n               [required]=\\\"true\\\"\\r\\n                 class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\" [banks]=\\\"curCodes$ | async\\\"\\r\\n                  placeholder=\\\"{{'~currencyCode' | translate}}\\\" [appearance]=\\\"'legacy'\\\">\\r\\n               </select-search>\\r\\n\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minAge' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minAge' | translate}}\\\" type=\\\"number\\\" name=\\\"minAge\\\"  [(ngModel)]=\\\"product.minAge\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~maxAge' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~maxAge' | translate}}\\\" type=\\\"number\\\" name=\\\"maxAge\\\"  [(ngModel)]=\\\"product.maxAge\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minAmount' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minAmount' | translate}}\\\" required  type=\\\"number\\\" name=\\\"minAmount\\\"  [(ngModel)]=\\\"product.minAmount\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~maxAmount' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~maxAmount' | translate}}\\\" required  type=\\\"number\\\" name=\\\"maxAmount\\\"  [(ngModel)]=\\\"product.maxAmount\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                  <mat-label>{{'~gracePeriod' | translate}}</mat-label>\\r\\n                  <input matInput placeholder=\\\"{{'~gracePeriod' | translate}}\\\" type=\\\"number\\\" required  name=\\\"withGracePeriod\\\"  [(ngModel)]=\\\"product.withGracePeriod\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minPeriod' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minPeriod' | translate}}\\\" required  type=\\\"number\\\" name=\\\"minPeriod\\\"  [(ngModel)]=\\\"product.minPeriod\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~maxPeriod' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~maxPeriod' | translate}}\\\" required  type=\\\"number\\\" name=\\\"maxPeriod\\\"  [(ngModel)]=\\\"product.maxPeriod\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minEffectiveRate' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minEffectiveRate' | translate}}\\\" type=\\\"number\\\" name=\\\"minEffectiveRate\\\"  [(ngModel)]=\\\"product.minEffectiveRate\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~maxEffectiveRate' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~maxEffectiveRate' | translate}}\\\" type=\\\"number\\\" name=\\\"maxEffectiveRate\\\"  [(ngModel)]=\\\"product.maxEffectiveRate\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minRate' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minRate' | translate}}\\\" type=\\\"number\\\" required\\r\\n                    name=\\\"minRate\\\"  [(ngModel)]=\\\"product.minRate\\\">\\r\\n                  </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~maxRate' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~maxRate' | translate}}\\\" type=\\\"number\\\" required\\r\\n                     name=\\\"maxRate\\\"  [(ngModel)]=\\\"product.maxRate\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~minSalary' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~minSalary' | translate}}\\\" type=\\\"number\\\" name=\\\"minSalary\\\"  [(ngModel)]=\\\"product.minSalary\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~insurance' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~insurance' | translate}}\\\" type=\\\"number\\\" name=\\\"insurance\\\"  [(ngModel)]=\\\"product.insurance\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~comissionCash' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~comissionCash' | translate}}\\\" required  type=\\\"number\\\" name=\\\"comissionCash\\\"  [(ngModel)]=\\\"product.comissionCash\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~comissionLoan' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~comissionLoan' | translate}}\\\" required  type=\\\"number\\\" name=\\\"comissionLoan\\\"  [(ngModel)]=\\\"product.comissionLoan\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\" appearance=\\\"legacy\\\">\\r\\n                    <mat-label>{{'~priority' | translate}}</mat-label>\\r\\n                    <input matInput placeholder=\\\"{{'~priority' | translate}}\\\" type=\\\"number\\\" required  name=\\\"priority\\\"  [(ngModel)]=\\\"product.priority\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"table-edit__inputs__field\\\">\\r\\n                    <mat-label>{{'~prodStatus'}}</mat-label>\\r\\n                    <mat-select  name=\\\"prodStatus\\\" [(ngModel)]=\\\"product.prodStatus\\\" required >\\r\\n                      <mat-option [value]=\\\"1\\\"> 1 </mat-option>\\r\\n                      <mat-option [value]=\\\"-1\\\">-1</mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n               <fieldset>\\r\\n                  <mat-checkbox\\r\\n                  name=\\\"withEmpReference\\\"\\r\\n                  [(ngModel)]=\\\"product.withEmpReference\\\"\\r\\n                 >\\r\\n                  {{'~adminWithEmpReference' | translate}}\\r\\n\\r\\n               </mat-checkbox>\\r\\n\\r\\n               </fieldset>\\r\\n\\r\\n               <fieldset>\\r\\n                  <mat-checkbox\\r\\n                  name=\\\"withCollateral\\\"\\r\\n                  [(ngModel)]=\\\"product.withCollateral\\\"\\r\\n                 >\\r\\n                  {{'~adminWithCollateral' | translate}}\\r\\n               </mat-checkbox>\\r\\n\\r\\n               </fieldset>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"hidden\\\" name=\\\"lnId\\\" [(ngModel)]=\\\"product.lnId\\\">\\r\\n\\r\\n</form>\\r\\n\"","module.exports = \"<div class=\\\"admin-module\\\">\\r\\n    <div class=\\\"admin-module__header\\\">\\r\\n      <div class=\\\"admin-module__header__moduleName\\\">{{ '~loans' | translate }}</div>\\r\\n      <div class=\\\"admin-module__header__actions\\\">\\r\\n\\r\\n        <mat-select [multiple]=\\\"true\\\" [ngModel]=\\\"visibleColumns\\\"\\r\\n        (ngModelChange)=\\\"onToggleColumns($event)\\\" name=\\\"columns\\\"\\r\\n         class=\\\"admin-module__header__actions__columns\\\">\\r\\n          <mat-select-trigger>{{'~columns' | translate}} </mat-select-trigger>\\r\\n          <div class=\\\"toggle-actions\\\">\\r\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"showAllColumns()\\\">\\r\\n              {{ '~showAll' | translate }}\\r\\n            </button>\\r\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"hideAllColumns()\\\">\\r\\n              {{ '~hideAll' | translate }}\\r\\n            </button>\\r\\n          </div>\\r\\n          <mat-option *ngFor=\\\"let col of allColumns\\\" [value]=\\\"col\\\">\\r\\n            {{col}}\\r\\n          </mat-option>\\r\\n      </mat-select>\\r\\n\\r\\n        <div class=\\\"admin-module__header__actions__general\\\">\\r\\n          <button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n            <div class=\\\"admin-module__header__actions__general__icon\\\">\\r\\n              <i class=\\\"fas fa-cog\\\"></i>\\r\\n            </div>\\r\\n            <div class=\\\"admin-module__header__actions__general__text\\\">\\r\\n              {{ '~generalActions' | translate }}\\r\\n            </div>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <mat-menu #menu=\\\"matMenu\\\" class=\\\"general-actions-menu\\\">\\r\\n\\r\\n          <button mat-menu-item (click)=\\\"onAdd()\\\" > {{ '~addData' | translate }}\\r\\n          </button>\\r\\n\\r\\n          <button mat-menu-item disabled = \\\"true\\\"\\r\\n          > {{ '~removeSelected' | translate }}\\r\\n          </button>\\r\\n\\r\\n          <button mat-menu-item disabled = \\\"true\\\"  > {{ '~print' | translate }}\\r\\n          </button>\\r\\n\\r\\n          <button mat-menu-item disabled = \\\"true\\\" > {{ '~export' | translate }}\\r\\n          </button>\\r\\n\\r\\n        </mat-menu>\\r\\n\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"admin-module__content\\\">\\r\\n      <div class=\\\"native-table-wrapper\\\" *ngIf=\\\"dataSource else table_loader\\\">\\r\\n          <table class=\\\"material-table\\\"\\r\\n          mat-table\\r\\n          matSort\\r\\n           [dataSource]=\\\"dataSource\\\"\\r\\n           class=\\\"mat-elevation-z8\\\"\\r\\n           >\\r\\n\\r\\n              <ng-container *ngFor=\\\"let column of visibleColumns\\\">\\r\\n\\r\\n                      <ng-container [matColumnDef]=\\\"column\\\" [ngSwitch]=\\\"isMultiLang(column)\\\" >\\r\\n\\r\\n                        <ng-container *ngSwitchCase=\\\"'standard'\\\">\\r\\n                          <th mat-header-cell *matHeaderCellDef >\\r\\n\\r\\n                            <div class=\\\"th-content\\\">\\r\\n                                <div mat-sort-header>{{column}}</div>\\r\\n                                <mat-form-field appearance=\\\"legacy\\\">\\r\\n                                    <input matInput [ngModel] = \\\"getFilterValue(column)\\\" (keyup)=\\\"applyFilter(column, $event.target.value)\\\" placeholder=\\\"Filter {{column}}\\\">\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n                            </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <div class=\\\"td-content\\\">\\r\\n                                 {{element[column]}}\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <ng-container *ngSwitchCase=\\\"'multilang'\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef >\\r\\n                                <div class=\\\"th-content\\\">\\r\\n                                    <div mat-sort-header>{{column}}</div>\\r\\n                                    <mat-form-field appearance=\\\"legacy\\\">\\r\\n                                        <input matInput (keyup)=\\\"applyMultiLangFilter(column, $event.target.value)\\\" placeholder=\\\"Filter {{column}}\\\">\\r\\n                                    </mat-form-field>\\r\\n                                </div>\\r\\n\\r\\n                            </th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                              <div class=\\\"td-content\\\">\\r\\n                                  {{element[column] | valueTranslate}}\\r\\n                              </div>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <ng-container *ngSwitchDefault>\\r\\n                            <th mat-header-cell *matHeaderCellDef></th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n\\r\\n                              <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Add or Edit\\\">\\r\\n                                <mat-icon>format_align_right</mat-icon>\\r\\n                              </button>\\r\\n\\r\\n                              <mat-menu #menu=\\\"matMenu\\\">\\r\\n\\r\\n                                <button mat-menu-item (click)=\\\"onEdit(element)\\\">\\r\\n                                  <mat-icon>edit</mat-icon>\\r\\n                                  <span>EDIT</span>\\r\\n                                </button>\\r\\n\\r\\n                                <button mat-menu-item (click)=\\\"onDelete(element)\\\">\\r\\n                                  <mat-icon>remove</mat-icon>\\r\\n                                  <span>DELETE</span>\\r\\n                                </button>\\r\\n\\r\\n                              </mat-menu>\\r\\n\\r\\n                            </td>\\r\\n                          </ng-container>\\r\\n\\r\\n                       </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"visibleColumns;sticky:true\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: visibleColumns;\\\"></tr>\\r\\n          </table>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"admin-module__content__paginator\\\">\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[20, 50, 500]\\\" showFirstLastButtons></mat-paginator>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n<ng-template #table_loader>\\r\\n  <div class=\\\"h-100\\\">\\r\\n      <table-loader></table-loader>\\r\\n  </div>\\r\\n</ng-template>\"","module.exports = \".upload-input-wrapper {\\n  width: 100%;\\n  height: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tcGFuZWwvYWRtaW4tbG9hbnMvYWRkLW9yLWVkaXQtbG9hbi9EOlxcc291cmNlIGNvZGVzXFxwbHVzLW1pbnVzL3NyY1xcYXBwXFxhZG1pbi1wYW5lbFxcYWRtaW4tbG9hbnNcXGFkZC1vci1lZGl0LWxvYW5cXGFkZC1vci1lZGl0LWxvYW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FkbWluLXBhbmVsL2FkbWluLWxvYW5zL2FkZC1vci1lZGl0LWxvYW4vYWRkLW9yLWVkaXQtbG9hbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxhQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1wYW5lbC9hZG1pbi1sb2Fucy9hZGQtb3ItZWRpdC1sb2FuL2FkZC1vci1lZGl0LWxvYW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXBsb2FkLWlucHV0LXdyYXBwZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDIwMHB4O1xyXG59IiwiLnVwbG9hZC1pbnB1dC13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMjAwcHg7XG59Il19 */\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\r\nimport { LoanProduct } from 'src/app/home/loans/models/loanGroup.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NgForm } from '@angular/forms';\r\nimport { of, Observable } from 'rxjs';\r\nimport { SelectType } from 'src/app/shared/models/select-type.model';\r\nimport { SharedAdminService } from '../../shared/shared-admin.service';\r\nimport { AdminLoanService } from '../admin-loan.service';\r\nimport { CrudCommandType } from '../../models/crud-command-type.enum';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AdminPanelService } from '../../admin-panel.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'add-or-edit-loan',\r\n  templateUrl: './add-or-edit-loan.component.html',\r\n  styleUrls: ['./add-or-edit-loan.component.scss']\r\n})\r\nexport class AddOrEditLoanComponent implements OnInit {\r\n  @ViewChild('f', { static: false }) form:NgForm;\r\n  product: LoanProduct;\r\n  banks$: Observable<SelectType[]> = of([]);\r\n  curCodes$: Observable<SelectType[]> = of([]);\r\n  loading: boolean;\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: {item: LoanProduct | undefined},\r\n    public dialogRef: MatDialogRef<AddOrEditLoanComponent>,\r\n    private sharedAdminService: SharedAdminService,\r\n    private adminLoanService: AdminLoanService,\r\n    private adminService: AdminPanelService,\r\n    private translateService: TranslateService\r\n    ) {\r\n      this.banks$ = this.sharedAdminService.getBankList(true);\r\n      this.curCodes$ = this.sharedAdminService.getCurrCodeList('loans');\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.product = this.data.item ? this.data.item : new LoanProduct();\r\n  }\r\n\r\n  onUpdate() {\r\n    if(!this.form.valid) {return;}\r\n    this.loading = true;\r\n    this.adminLoanService.crudProduct(CrudCommandType.UPDATE, this.product )\r\n    .pipe(\r\n      finalize(() => this.loading = false)\r\n    )\r\n    .subscribe(res => {\r\n      if(res) {\r\n        this.onUpdateSuccess(res);\r\n      }\r\n    })\r\n  }\r\n  onAdd() {\r\n    if(!this.form.valid) {return;}\r\n    this.loading = true;\r\n    this.adminLoanService.crudProduct(CrudCommandType.INSERT , this.product )\r\n    .pipe(\r\n      finalize(() => this.loading = false)\r\n    )\r\n    .subscribe(res => {\r\n      if(res) {\r\n        this.onAddSuccess(res);\r\n      }\r\n    })\r\n  }\r\n  onAddSuccess(res) {\r\n        this.adminService\r\n          .createNotification(`[ LOAN ] ${this.translateService.instant('~addSuccess')}`, 'OK', 'success');\r\n       this.dialogRef.close(res);\r\n   }\r\n   onUpdateSuccess(res) {\r\n    this.adminService\r\n    .createNotification(`[ LOAN ] ${this.translateService.instant('~updateSuccess')}`, 'OK', 'success');\r\n       this.dialogRef.close(res);\r\n   }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AdminPanelService } from '../admin-panel.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { DataResponse } from 'src/app/models/data-reponse';\r\nimport { of, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CrudCommandType } from '../models/crud-command-type.enum';\r\nimport { LoanProduct } from 'src/app/home/loans/models/loanGroup.model';\r\n\r\n@Injectable()\r\nexport class AdminLoanService {\r\n  constructor(private http: HttpClient, private adminPanelService: AdminPanelService) {}\r\n    crudProduct(commandType: CrudCommandType, loanProduct = {}): Observable<LoanProduct[]> {\r\n      return this.http.post<DataResponse>('mybank/crud/loanProduct', {\r\n        adminToken: this.adminPanelService.token,\r\n        commandType: commandType,\r\n        ...loanProduct,\r\n    }).pipe(\r\n        map(res => res && res.data),\r\n        catchError(er => of(null))\r\n    );\r\n    }\r\n}\r\n","module.exports = \":host {\\n  display: block;\\n}\\n\\n::ng-deep .cdk-column-loanName {\\n  width: 200px;\\n}\\n\\n::ng-deep .cdk-column-editer {\\n  width: 50px;\\n  padding-right: 8px;\\n  transition: color 100ms ease-in-out;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  right: 0;\\n}\\n\\n::ng-deep .cdk-column-editer:before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  height: 100%;\\n  width: 100%;\\n  border-left: 1px solid #e0e0e0;\\n  background: #ffffff;\\n}\\n\\n::ng-deep .cdk-column-editer:hover {\\n  color: var(--secondary-default);\\n}\\n\\n.th-content {\\n  padding-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tcGFuZWwvYWRtaW4tbG9hbnMvRDpcXHNvdXJjZSBjb2Rlc1xccGx1cy1taW51cy9zcmNcXGFwcFxcYWRtaW4tcGFuZWxcXGFkbWluLWxvYW5zXFxhZG1pbi1sb2Fucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYWRtaW4tcGFuZWwvYWRtaW4tbG9hbnMvYWRtaW4tbG9hbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FET0c7RUFDSSxZQUFBO0FDSlA7O0FET0c7RUFDQyxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQ0FBQTtFQUNBLHdCQUFBO0VBQUEsZ0JBQUE7RUFDQSxRQUFBO0FDSko7O0FES0k7RUFDSSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsOEJBQUE7RUFDQSxtQkFBQTtBQ0hSOztBRE1JO0VBQ0ksK0JBQUE7QUNKUjs7QURZRTtFQUNJLGlCQUFBO0FDVE4iLCJmaWxlIjoic3JjL2FwcC9hZG1pbi1wYW5lbC9hZG1pbi1sb2Fucy9hZG1pbi1sb2Fucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICB9XHJcblxyXG4gICA6Om5nLWRlZXAgLmNkay1jb2x1bW4tYmFua0lke1xyXG4gICAgICAgLnRkLWNvbnRlbnQge1xyXG4gICAgICAgLy8gICAgbWF4LXdpZHRoOiA1MHB4O1xyXG4gICAgICAgIH1cclxuICAgfVxyXG4gICA6Om5nLWRlZXAgLmNkay1jb2x1bW4tbG9hbk5hbWUge1xyXG4gICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICB9XHJcblxyXG4gICA6Om5nLWRlZXAgLmNkay1jb2x1bW4tZWRpdGVyIHtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMTAwbXMgZWFzZS1pbi1vdXQ7XHJcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlMGUwZTA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcclxuICAgIH1cclxuICAvLyAgYmFja2dyb3VuZDogI2ZmZmZmZjtcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktZGVmYXVsdCk7XHJcbiAgICB9XHJcbiAgIH1cclxuXHJcbiAgIHRkLm1hdC1jb2x1bW4tZWRpdGVyIHtcclxuXHJcbiAgfVxyXG5cclxuICAudGgtY29udGVudCB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG4gIH0iLCI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG46Om5nLWRlZXAgLmNkay1jb2x1bW4tbG9hbk5hbWUge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbjo6bmctZGVlcCAuY2RrLWNvbHVtbi1lZGl0ZXIge1xuICB3aWR0aDogNTBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xuICB0cmFuc2l0aW9uOiBjb2xvciAxMDBtcyBlYXNlLWluLW91dDtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgcmlnaHQ6IDA7XG59XG46Om5nLWRlZXAgLmNkay1jb2x1bW4tZWRpdGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlMGUwZTA7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG59XG46Om5nLWRlZXAgLmNkay1jb2x1bW4tZWRpdGVyOmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS1kZWZhdWx0KTtcbn1cblxuLnRoLWNvbnRlbnQge1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { AdminLoanService } from './admin-loan.service';\r\nimport { CrudCommandType } from '../models/crud-command-type.enum';\r\nimport { LoanProduct } from 'src/app/home/loans/models/loanGroup.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSelectChange } from '@angular/material/select';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AddOrEditLoanComponent } from './add-or-edit-loan/add-or-edit-loan.component';\r\nimport { TableDialogConfig } from '../admin-panel.utils';\r\nimport { ConfirmDialogComponent } from '../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { AdminPanelService } from '../admin-panel.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'admin-loans',\r\n  templateUrl: './admin-loans.component.html',\r\n  styleUrls: ['./admin-loans.component.scss'],\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdminLoansComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n  allColumns: string[];\r\n  visibleColumns: string[];\r\n  toggleColumnsControl: FormControl = new FormControl();\r\n  dataSource: MatTableDataSource<LoanProduct>;\r\n  dataFilterState: { column: string, filterValue: string, multi: boolean };\r\n  constructor(\r\n    private adminLoanService: AdminLoanService,\r\n    private translateService: TranslateService,\r\n    private dialog: MatDialog,\r\n    private adminService: AdminPanelService,\r\n    private changeRef: ChangeDetectorRef\r\n  ) { }\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n  initToggleColumnControl() {\r\n    this.toggleColumnsControl.setValue(this.allColumns);\r\n    this.toggleColumnsControl.valueChanges.subscribe(res => {\r\n      this.allColumns = res;\r\n      // this.changeRef.detectChanges();\r\n    })\r\n  }\r\n  applyFilter(column, filterValue: string) {\r\n    this.dataSource.filterPredicate =\r\n      (data: LoanProduct, filter: string) => data[column].toString().toLowerCase().includes(filter.toLowerCase());\r\n    this.dataSource.filter = filterValue;\r\n    this.dataFilterState = { column, filterValue, multi: false };\r\n  }\r\n  applyMultiLangFilter(column, filterValue: string) {\r\n    this.dataSource.filterPredicate =\r\n      (data: LoanProduct, filter: string) => data[column]['az'].toLowerCase().includes(filter.toLowerCase());\r\n    this.dataSource.filter = filterValue;\r\n    this.dataFilterState = { column, filterValue, multi: true };\r\n  }\r\n\r\n  isMultiLang(column: string): string {\r\n    if (column === 'editer') {\r\n      return 'editer';\r\n    }\r\n    return (column === 'loanName' || column === 'description' || column === 'descriptionPD' || column === 'descriptionDOC') ? 'multilang' : 'standard';\r\n  }\r\n  getData() {\r\n    this.dataSource = undefined;\r\n    this.adminLoanService.crudProduct(CrudCommandType.SELECT, {})\r\n      .subscribe(res => {\r\n        if (!(res && res[0])) { return; }\r\n        this.dataSource = new MatTableDataSource(res);\r\n        if (this.dataFilterState) {\r\n          const { column, filterValue, multi } = { ...this.dataFilterState };\r\n          multi ? this.applyMultiLangFilter(column, filterValue) :\r\n            this.applyFilter(column, filterValue);\r\n        }\r\n        const columns = Object.keys(res[0]);\r\n        columns.push('editer');\r\n        this.allColumns = [...columns].\r\n          filter(column => (column !== 'description') && (column !== 'descriptionPD') && (column !== 'descriptionDOC') && (column !== 'lnId'));\r\n        this.allColumns.unshift('lnId');\r\n        this.visibleColumns = [...this.allColumns];\r\n        setTimeout(() => {\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n        }, 10);\r\n      })\r\n  }\r\n\r\n  getFilterValue(column: string): string | void {\r\n    if (!(this.dataFilterState && this.dataFilterState.column === column)) { return; }\r\n    return this.dataFilterState.filterValue;\r\n  }\r\n\r\n  onEdit(item: LoanProduct) {\r\n    const ref = this.dialog.open(AddOrEditLoanComponent, {\r\n      data: {\r\n        item: item\r\n      },\r\n      ...TableDialogConfig\r\n    });\r\n    ref.afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.getData();\r\n      }\r\n    });\r\n  }\r\n  onAdd() {\r\n    const ref = this.dialog.open(AddOrEditLoanComponent, {\r\n      data: {\r\n      },\r\n      ...TableDialogConfig\r\n    });\r\n    ref.afterClosed().subscribe(res => res && this.getData());\r\n  }\r\n  onDelete(element: LoanProduct) {\r\n    const ref = this.dialog.open(ConfirmDialogComponent, {\r\n      data: {\r\n        title: \"Əminsiz silməyə ?\"\r\n      }\r\n    });\r\n    ref.afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.adminLoanService.crudProduct(CrudCommandType.DELETE, element)\r\n          .subscribe(res => {\r\n            if (res) {\r\n              this.adminService\r\n                .createNotification(`[ LOAN ] ${this.translateService.instant('~deleteSuccess')}`, 'OK', 'success');\r\n              this.getData();\r\n            }\r\n          })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  showAllColumns() {\r\n    this.visibleColumns = [...this.allColumns];\r\n  }\r\n  hideAllColumns() {\r\n    this.visibleColumns = [];\r\n  }\r\n  onToggleColumns(columns: string[]) {\r\n    this.visibleColumns = columns;\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminLoansComponent } from './admin-loans.component';\r\nimport { AdminLoansRoutingModule } from './admin-loans.routing';\r\nimport { AddOrEditLoanComponent } from './add-or-edit-loan/add-or-edit-loan.component';\r\nimport { SharedAdminModule } from '../shared/shared-admin.module';\r\nimport { AdminLoanService } from './admin-loan.service';\r\n\r\n@NgModule({\r\n  declarations: [AdminLoansComponent, AddOrEditLoanComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedAdminModule,\r\n    AdminLoansRoutingModule,\r\n  ],\r\n  entryComponents: [AddOrEditLoanComponent],\r\n  providers: [AdminLoanService]\r\n})\r\nexport class AdminLoansModule { }\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminLoansComponent } from './admin-loans.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AdminLoansComponent, data: {key: \"admin/loans\"}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminLoansRoutingModule {}","export interface LoanGroup{\r\n    bankID: number;\r\n    bankName: string;\r\n    list: LoanProduct[];\r\n  }\r\n\r\n export class LoanProduct {\r\n    lnID = null;\r\n    bankID = null;\r\n    //temp\r\n    lnId = null;\r\n    bankId = null;\r\n    bankName = null;\r\n    loanType = null;\r\n    loanName = new Value();\r\n    currencyCode = null;\r\n    priority = null;\r\n    withEmpReference = null;\r\n    withCollateral = null;\r\n    withGracePeriod = null;\r\n    auditorium? = null;\r\n    comissionCash? = null;\r\n    comissionLoan? = null;\r\n    minAge = null;\r\n    maxAge = null;\r\n    minAmount? = null;\r\n    maxAmount = null;\r\n    minPeriod = null;\r\n    maxPeriod = null;\r\n    minRate? = null;\r\n    maxRate? = null;\r\n    minEffectiveRate? = null;\r\n    maxEffectiveRate? = null;\r\n    insurance = null;\r\n    minSalary = null;\r\n    description = new Value();\r\n    descriptionPD = new Value();\r\n    descriptionDOC = new Value();\r\n    minMonthlyPayment? = null;\r\n    maxMonthlyPayment? = null;\r\n    anunitet? = null;\r\n    prodStatus = null;\r\n  }\r\n\r\n  class Value {\r\n    az = '';\r\n    ru = '';\r\n    en = '';\r\n  }"],"sourceRoot":""}